basePath: /api
definitions:
  models.UserResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      photo:
        type: string
      provider:
        type: string
      role:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is a sample goplock server.
  title: Goplock API
  version: v1
paths:
  /auth/login:
    post:
      description: Login User
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      responses: {}
      summary: Login
      tags:
      - Auth
  /auth/logout:
    delete:
      description: Logout User
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Logout
      tags:
      - Auth
  /auth/refresh:
    post:
      description: Refresh Access Token
      responses: {}
      summary: Refresh Access Token
      tags:
      - Auth
  /auth/register:
    post:
      description: Register new User
      parameters:
      - description: Name
        in: formData
        name: name
        required: true
        type: string
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Password Confirmation
        in: formData
        name: passwordConfirmation
        required: true
        type: string
      - description: Photo
        in: formData
        name: photo
        type: string
      responses: {}
      summary: Register
      tags:
      - Auth
  /users:
    get:
      description: Get all Users
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserResponse'
            type: array
      security:
      - BearerAuth: []
      summary: Get Users
      tags:
      - User
  /users/{id}:
    get:
      description: Get User by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
      security:
      - BearerAuth: []
      summary: Get User
      tags:
      - User
  /users/me:
    get:
      description: Get current User
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
      security:
      - BearerAuth: []
      summary: Get Me
      tags:
      - User
produces:
- application/json
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
