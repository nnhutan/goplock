{
    "produces": [
        "application/json"
    ],
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample goplock server.",
        "title": "Goplock API",
        "contact": {},
        "version": "v1"
    },
    "host": "localhost:8000",
    "basePath": "/api",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login User",
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/auth/logout": {
            "delete": {
                "description": "Logout User",
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "responses": {}
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refresh Access Token",
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Access Token",
                "responses": {}
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register new User",
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password Confirmation",
                        "name": "passwordConfirmation",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Photo",
                        "name": "photo",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/users": {
            "get": {
                "description": "Get all Users",
                "tags": [
                    "User"
                ],
                "summary": "Get Users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get User by ID",
                "tags": [
                    "User"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "Email",
                "Password"
            ],
            "properties": {
                "Email": {
                    "type": "string"
                },
                "ID": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                },
                "Photo": {
                    "type": "string"
                },
                "Provider": {
                    "type": "string"
                },
                "Role": {
                    "type": "string"
                },
                "Verified": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}